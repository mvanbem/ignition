(function() {var implementors = {};
implementors["ignition_9p"] = [{"text":"impl UnwindSafe for Fid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenAccess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Qid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StatMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixTriplet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TAttach","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RAttach","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TWalk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RWalk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TOpen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ROpen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TCreate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RCreate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TRead","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RRead","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TWrite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RWrite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TClunk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TStat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RStat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TWstat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadMessageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageBody","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Header","synthetic":true,"types":[]}];
implementors["ignition_blob"] = [{"text":"impl&lt;T&gt; UnwindSafe for WarpBufReader&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalServerError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlobId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HashAlgorithm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokioFileSystem","synthetic":true,"types":[]}];
implementors["ignition_demo_9p_server"] = [{"text":"impl UnwindSafe for ConnectionState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocateFidError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ROOT","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()