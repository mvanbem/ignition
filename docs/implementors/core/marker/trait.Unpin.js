(function() {var implementors = {};
implementors["ignition_9p"] = [{"text":"impl Unpin for Fid","synthetic":true,"types":[]},{"text":"impl Unpin for FileType","synthetic":true,"types":[]},{"text":"impl Unpin for OpenAccess","synthetic":true,"types":[]},{"text":"impl Unpin for OpenMode","synthetic":true,"types":[]},{"text":"impl Unpin for Qid","synthetic":true,"types":[]},{"text":"impl Unpin for Stat","synthetic":true,"types":[]},{"text":"impl Unpin for StatMode","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for UnixTriplet","synthetic":true,"types":[]},{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for TVersion","synthetic":true,"types":[]},{"text":"impl Unpin for RVersion","synthetic":true,"types":[]},{"text":"impl Unpin for TAttach","synthetic":true,"types":[]},{"text":"impl Unpin for RAttach","synthetic":true,"types":[]},{"text":"impl Unpin for RError","synthetic":true,"types":[]},{"text":"impl Unpin for TWalk","synthetic":true,"types":[]},{"text":"impl Unpin for RWalk","synthetic":true,"types":[]},{"text":"impl Unpin for TOpen","synthetic":true,"types":[]},{"text":"impl Unpin for ROpen","synthetic":true,"types":[]},{"text":"impl Unpin for TCreate","synthetic":true,"types":[]},{"text":"impl Unpin for RCreate","synthetic":true,"types":[]},{"text":"impl Unpin for TRead","synthetic":true,"types":[]},{"text":"impl Unpin for RRead","synthetic":true,"types":[]},{"text":"impl Unpin for TWrite","synthetic":true,"types":[]},{"text":"impl Unpin for RWrite","synthetic":true,"types":[]},{"text":"impl Unpin for TClunk","synthetic":true,"types":[]},{"text":"impl Unpin for TStat","synthetic":true,"types":[]},{"text":"impl Unpin for RStat","synthetic":true,"types":[]},{"text":"impl Unpin for TWstat","synthetic":true,"types":[]},{"text":"impl Unpin for ReadMessageError","synthetic":true,"types":[]},{"text":"impl Unpin for MessageBody","synthetic":true,"types":[]},{"text":"impl Unpin for MessageType","synthetic":true,"types":[]}];
implementors["ignition_9p_wire"] = [{"text":"impl&lt;'a, I, T&gt; Unpin for BorrowedCountPrefixedList&lt;'a, I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for OwnedCountPrefixedList&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for BorrowedLengthPrefixedBytes&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for OwnedLengthPrefixedBytes&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, T&gt; Unpin for BorrowedSizePrefixed&lt;'a, I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for LimitedWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for OwnedSizePrefixed&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ignition_blob"] = [{"text":"impl&lt;T&gt; Unpin for WarpBufReader&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for InternalServerError","synthetic":true,"types":[]},{"text":"impl Unpin for BlobId","synthetic":true,"types":[]},{"text":"impl Unpin for HashAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for TokioFileSystem","synthetic":true,"types":[]}];
implementors["ignition_demo_9p_server"] = [{"text":"impl Unpin for ConnectionState","synthetic":true,"types":[]},{"text":"impl Unpin for AllocateFidError","synthetic":true,"types":[]},{"text":"impl Unpin for Node","synthetic":true,"types":[]},{"text":"impl Unpin for ROOT","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()